import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,d as a,o as t}from"./app-CRoaDNLO.js";const n={};function o(l,e){return t(),i("div",null,e[0]||(e[0]=[a(`<blockquote><p>在使用 Github Action 自动化部署博客时，需要用到密钥来登录服务器，在这里记录一下具体步骤和其中踩过的一些坑</p></blockquote><h2 id="生成密钥对" tabindex="-1"><a class="header-anchor" href="#生成密钥对"><span>生成密钥对</span></a></h2><p>在 <code>root/.ssh</code>目录中生成公私钥</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[root@CentOSAli ~]# ssh-keygen</span></span>
<span class="line"><span>Generating public/private rsa key pair.</span></span>
<span class="line"><span>Enter file in which to save the key (/root/.ssh/id_rsa):</span></span>
<span class="line"><span>Created directory &#39;/root/.ssh&#39;.</span></span>
<span class="line"><span>Enter passphrase (empty for no passphrase):</span></span>
<span class="line"><span>Enter same passphrase again:</span></span>
<span class="line"><span>Your identification has been saved in /root/.ssh/id_rsa.</span></span>
<span class="line"><span>Your public key has been saved in /root/.ssh/id_rsa.pub.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>新旧生成方式带来的问题</strong></li></ul><p><code>ssh-keygen</code> 新的生成方式，id_rsa的开头会变成<code>BEGIN OPENSSH PRIVATE KEY</code>，而不是 <code>BEGIN RSA PRIVATE KEY</code></p><p>在多数软件还不支持 OPENSSH 格式的 KEY 的情况下，我们可以使用 <code>ssh-keygen -m PEM -t rsa -b 4096 -C &quot;your_email@example.com&quot;</code> 来继续生成 PEM 格式的 KEY</p><h2 id="在服务器上安装公钥" tabindex="-1"><a class="header-anchor" href="#在服务器上安装公钥"><span>在服务器上安装公钥</span></a></h2><p>很重要的一步，之前一直卡在这里，尝试了很多可能发现是没有安装</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[root@CentOSAli ~]# cd .ssh</span></span>
<span class="line"><span>[root@CentOSAli .ssh]# cat id_rsa.pub &gt;&gt; authorized_keys</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="保证文件权限" tabindex="-1"><a class="header-anchor" href="#保证文件权限"><span>保证文件权限</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[root@CentOSAli .ssh]# chmod 600 authorized_keys</span></span>
<span class="line"><span>[root@CentOSAli .ssh]# chmod 700 ~/.ssh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,12)]))}const d=s(n,[["render",o],["__file","200921_通过密钥登陆服务器.html.vue"]]),p=JSON.parse(`{"path":"/archive/blog/2020/200921_%E9%80%9A%E8%BF%87%E5%AF%86%E9%92%A5%E7%99%BB%E9%99%86%E6%9C%8D%E5%8A%A1%E5%99%A8.html","title":"通过密钥登陆服务器","lang":"zh-CN","frontmatter":{"title":"通过密钥登陆服务器","date":"2020-09-21T05:23:26.000Z","category":["关于技术"],"tag":["ssh"],"description":"在使用 Github Action 自动化部署博客时，需要用到密钥来登录服务器，在这里记录一下具体步骤和其中踩过的一些坑 生成密钥对 在 root/.ssh目录中生成公私钥 新旧生成方式带来的问题 ssh-keygen 新的生成方式，id_rsa的开头会变成BEGIN OPENSSH PRIVATE KEY，而不是 BEGIN RSA PRIVATE ...","head":[["meta",{"property":"og:url","content":"https://logycoconut.github.io/archive/blog/2020/200921_%E9%80%9A%E8%BF%87%E5%AF%86%E9%92%A5%E7%99%BB%E9%99%86%E6%9C%8D%E5%8A%A1%E5%99%A8.html"}],["meta",{"property":"og:site_name","content":"logycoconut's k-lab"}],["meta",{"property":"og:title","content":"通过密钥登陆服务器"}],["meta",{"property":"og:description","content":"在使用 Github Action 自动化部署博客时，需要用到密钥来登录服务器，在这里记录一下具体步骤和其中踩过的一些坑 生成密钥对 在 root/.ssh目录中生成公私钥 新旧生成方式带来的问题 ssh-keygen 新的生成方式，id_rsa的开头会变成BEGIN OPENSSH PRIVATE KEY，而不是 BEGIN RSA PRIVATE ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-11T14:19:39.000Z"}],["meta",{"property":"article:tag","content":"ssh"}],["meta",{"property":"article:published_time","content":"2020-09-21T05:23:26.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-11T14:19:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"通过密钥登陆服务器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-09-21T05:23:26.000Z\\",\\"dateModified\\":\\"2025-02-11T14:19:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"logycoconut\\",\\"url\\":\\"https://logycoconut.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"生成密钥对","slug":"生成密钥对","link":"#生成密钥对","children":[]},{"level":2,"title":"在服务器上安装公钥","slug":"在服务器上安装公钥","link":"#在服务器上安装公钥","children":[]},{"level":2,"title":"保证文件权限","slug":"保证文件权限","link":"#保证文件权限","children":[]}],"git":{"createdTime":1667915485000,"updatedTime":1739283579000,"contributors":[{"name":"logycoconut","username":"logycoconut","email":"1425795337@qq.com","commits":1,"url":"https://github.com/logycoconut"},{"name":"logycoconut","username":"logycoconut","email":"logycoconut@foxmail.com","commits":5,"url":"https://github.com/logycoconut"}]},"readingTime":{"minutes":0.91,"words":273},"filePathRelative":"archive/blog/2020/200921_通过密钥登陆服务器.md","localizedDate":"2020年9月21日","autoDesc":true}`);export{d as comp,p as data};
