import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,d as n,o}from"./app-mbwvGqXF.js";const r={};function c(p,e){return o(),t("div",null,e[0]||(e[0]=[n('<h3 id="原理图" tabindex="-1"><a class="header-anchor" href="#原理图"><span>原理图</span></a></h3><h4 id="jdk1-7中的-concurrenthashmap" tabindex="-1"><a class="header-anchor" href="#jdk1-7中的-concurrenthashmap"><span>JDK1.7中的 ConcurrentHashMap</span></a></h4><p>采用了分段锁的思想，将 HashMap 进行分隔，把 HashMap 中的哈希数组切分成小数组，每个小数组有 n 个 HashEntry 组成，其中小数组继承自 <code>ReentrantLock</code>，这个小数组名叫 <code>Segment</code></p><figure><img src="https://cdn.jsdelivr.net/gh/logycoconut/pic-repo/java/ConcurrentHashMap java7 锁图.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h4 id="jdk1-8中的改动" tabindex="-1"><a class="header-anchor" href="#jdk1-8中的改动"><span>JDK1.8中的改动</span></a></h4><p>JDK1.8对 HashMap 做了改动，<strong>当冲突链表长度超过8时，会将链表转化成红黑树</strong></p><p>1.8后取消了分段锁，采用 CAS + synchronized 来保证并发安全</p><p>synchronized 只锁定当前链表或者红黑树的首节点，只存节点 Hash 不冲突，就不会产生并发</p><figure><img src="https://cdn.jsdelivr.net/gh/logycoconut/pic-repo/java/ConcurrentHashMap java8 锁图.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h3 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接"><span>参考链接</span></a></h3><p><a href="http://www.justdojava.com/2019/12/18/java-collection-15.1/" target="_blank" rel="noopener noreferrer">面试必问之 ConcurrentHashMap 线程安全的具体实现方式</a></p>',11)]))}const h=a(r,[["render",c],["__file","02_ConcurrentHashMap 实现线程安全.html.vue"]]),l=JSON.parse(`{"path":"/resource/code/01_java/02_%E9%9B%86%E5%90%88/02_ConcurrentHashMap%20%E5%AE%9E%E7%8E%B0%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8.html","title":"ConcurrentHashMap 实现线程安全","lang":"zh-CN","frontmatter":{"title":"ConcurrentHashMap 实现线程安全","date":"2022-04-20T00:00:00.000Z","tag":["Java"],"description":"原理图 JDK1.7中的 ConcurrentHashMap 采用了分段锁的思想，将 HashMap 进行分隔，把 HashMap 中的哈希数组切分成小数组，每个小数组有 n 个 HashEntry 组成，其中小数组继承自 ReentrantLock，这个小数组名叫 Segment image.pngimage.png JDK1.8中的改动 JDK1....","head":[["meta",{"property":"og:url","content":"https://logycoconut.github.io/resource/code/01_java/02_%E9%9B%86%E5%90%88/02_ConcurrentHashMap%20%E5%AE%9E%E7%8E%B0%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8.html"}],["meta",{"property":"og:site_name","content":"logycoconut's k-lab"}],["meta",{"property":"og:title","content":"ConcurrentHashMap 实现线程安全"}],["meta",{"property":"og:description","content":"原理图 JDK1.7中的 ConcurrentHashMap 采用了分段锁的思想，将 HashMap 进行分隔，把 HashMap 中的哈希数组切分成小数组，每个小数组有 n 个 HashEntry 组成，其中小数组继承自 ReentrantLock，这个小数组名叫 Segment image.pngimage.png JDK1.8中的改动 JDK1...."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/logycoconut/pic-repo/java/ConcurrentHashMap%20java7%20%E9%94%81%E5%9B%BE.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-11T14:19:39.000Z"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2022-04-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-11T14:19:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ConcurrentHashMap 实现线程安全\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/logycoconut/pic-repo/java/ConcurrentHashMap%20java7%20%E9%94%81%E5%9B%BE.png\\",\\"https://cdn.jsdelivr.net/gh/logycoconut/pic-repo/java/ConcurrentHashMap%20java8%20%E9%94%81%E5%9B%BE.png\\"],\\"datePublished\\":\\"2022-04-20T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-11T14:19:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"logycoconut\\",\\"url\\":\\"https://logycoconut.github.io/\\"}]}"]]},"headers":[{"level":3,"title":"原理图","slug":"原理图","link":"#原理图","children":[{"level":4,"title":"JDK1.7中的 ConcurrentHashMap","slug":"jdk1-7中的-concurrenthashmap","link":"#jdk1-7中的-concurrenthashmap","children":[]},{"level":4,"title":"JDK1.8中的改动","slug":"jdk1-8中的改动","link":"#jdk1-8中的改动","children":[]}]},{"level":3,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]}],"git":{"createdTime":1676991217000,"updatedTime":1739283579000,"contributors":[{"name":"logycoconut","username":"logycoconut","email":"logycoconut@foxmail.com","commits":6,"url":"https://github.com/logycoconut"}]},"readingTime":{"minutes":0.7,"words":211},"filePathRelative":"resource/code/01_java/02_集合/02_ConcurrentHashMap 实现线程安全.md","localizedDate":"2022年4月20日","autoDesc":true}`);export{h as comp,l as data};
