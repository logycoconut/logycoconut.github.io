import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,d as i,o as t}from"./app-CDs18hrd.js";const s={};function o(n,e){return t(),l("div",null,e[0]||(e[0]=[i(`<h2 id="lua脚本" tabindex="-1"><a class="header-anchor" href="#lua脚本"><span>Lua脚本</span></a></h2><h3 id="call-结果比较-redis-nil-类型-lua-boolean-false" tabindex="-1"><a class="header-anchor" href="#call-结果比较-redis-nil-类型-lua-boolean-false"><span>call 结果比较 <code>Redis Nil 类型 -&gt; Lua boolean false</code></span></a></h3><ul><li>先看一段代码</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 如果 test 有值，则返回1，否则返回0</span></span>
<span class="line"><span>127.0.0.1:6379 &gt; eval &quot;local a = redis.call(&#39;get&#39;, &#39;key1&#39;); if a == nil then return 0; else return 1; end&quot; 0\\</span></span>
<span class="line"><span>(integer) 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Lua 脚本的逻辑很清晰，而且可以确保 <code>key1</code> 是没有值的</p><p>但是！为啥会返回 1 ？</p><p>根据 <a href="https://redis.io/docs/manual/programmability/lua-api/#resp2-to-lua-type-conversion" target="_blank" rel="noopener noreferrer">官方文档</a> 所示</p><p><code>Redis Nil bulk reply and Nil multi bulk reply -&gt; Lua false boolean type</code></p><p>也就是说，<strong>Redis 会将 <code>nil</code> 转换成 Lua 里 <code>boolean</code> 的 <code>false</code> 值</strong></p><ul><li>改变一下 Lua 脚本的判断条件</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>127.0.0.1:6379 &gt; eval &quot;local a = redis.call(&#39;get&#39;, &#39;key1&#39;); if a == false then return 0; else return 1; end&quot; 0\\</span></span>
<span class="line"><span>(integer) 0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>经过调整之后，终于返回预期结果</p><p>​​<!-- +++++++++ 下面是引用式链接 +++++++++ --></p>`,13)]))}const c=a(s,[["render",o],["__file","210610 Redis 的坑点.html.vue"]]),p=JSON.parse(`{"path":"/resource/code/03_database/02_redis/210610%20Redis%20%E7%9A%84%E5%9D%91%E7%82%B9.html","title":"在 Redis 中遇到的坑点","lang":"zh-CN","frontmatter":{"title":"在 Redis 中遇到的坑点","date":"2021-06-10T00:00:00.000Z","tag":["Redis"],"description":"Lua脚本 call 结果比较 Redis Nil 类型 -> Lua boolean false 先看一段代码 Lua 脚本的逻辑很清晰，而且可以确保 key1 是没有值的 但是！为啥会返回 1 ？ 根据 官方文档 所示 Redis Nil bulk reply and Nil multi bulk reply -> Lua false boolea...","head":[["meta",{"property":"og:url","content":"https://logycoconut.github.io/resource/code/03_database/02_redis/210610%20Redis%20%E7%9A%84%E5%9D%91%E7%82%B9.html"}],["meta",{"property":"og:site_name","content":"logycoconut's k-lab"}],["meta",{"property":"og:title","content":"在 Redis 中遇到的坑点"}],["meta",{"property":"og:description","content":"Lua脚本 call 结果比较 Redis Nil 类型 -> Lua boolean false 先看一段代码 Lua 脚本的逻辑很清晰，而且可以确保 key1 是没有值的 但是！为啥会返回 1 ？ 根据 官方文档 所示 Redis Nil bulk reply and Nil multi bulk reply -> Lua false boolea..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-11T14:19:39.000Z"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:published_time","content":"2021-06-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-11T14:19:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"在 Redis 中遇到的坑点\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-06-10T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-11T14:19:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"logycoconut\\",\\"url\\":\\"https://logycoconut.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"Lua脚本","slug":"lua脚本","link":"#lua脚本","children":[{"level":3,"title":"call 结果比较 Redis Nil 类型 -> Lua boolean false","slug":"call-结果比较-redis-nil-类型-lua-boolean-false","link":"#call-结果比较-redis-nil-类型-lua-boolean-false","children":[]}]}],"git":{"createdTime":1676903071000,"updatedTime":1739283579000,"contributors":[{"name":"logycoconut","username":"logycoconut","email":"logycoconut@foxmail.com","commits":5,"url":"https://github.com/logycoconut"}]},"readingTime":{"minutes":0.76,"words":229},"filePathRelative":"resource/code/03_database/02_redis/210610 Redis 的坑点.md","localizedDate":"2021年6月10日","autoDesc":true}`);export{c as comp,p as data};
