import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,d as n,o as i}from"./app-CDs18hrd.js";const l={};function a(c,e){return i(),o("div",null,e[0]||(e[0]=[n('<h3 id="消息发送方式" tabindex="-1"><a class="header-anchor" href="#消息发送方式"><span>消息发送方式</span></a></h3><ul><li>同步发送</li></ul><p>生产者向 MQ 发送消息，会阻塞线程，必须拿到 MQ 返回的结果后，整个过程才算结束</p><ul><li>异步发送</li></ul><p>先构建一个发送的任务，然后将任务丢到线程池中，最终结果是通过回调函数来得知</p><ul><li>OneWay 发送（单向）</li></ul><p>只负责发送请求，不需要关注结果</p><p>适用于 log 之类的消息，丢几条也没有关系</p><p>如果要保证消息不丢失，那就尽量不要选择这种方式</p><h3 id="什么时候会导致消息丢失" tabindex="-1"><a class="header-anchor" href="#什么时候会导致消息丢失"><span>什么时候会导致消息丢失</span></a></h3><p>RocketMQ 消息是放在磁盘里面的，而且默认选择异步刷盘策略</p><figure><img src="https://cdn.jsdelivr.net/gh/logycoconut/pic-repo/code/mq/20230224151635.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><ul><li>异步刷盘的过程中，MQ 节点损坏，消息就落不了盘</li><li>磁盘坏了</li></ul><p>RocketMQ 采用一主多从的方式来备份消息，单个节点的磁盘数据坏了之后可以从其他节点中恢复</p>',14)]))}const s=t(l,[["render",a],["__file","如何保证线上 MQ 消息不丢失.html.vue"]]),g=JSON.parse(`{"path":"/resource/staged/SeniorDevelopment/RocketMQ/%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E7%BA%BF%E4%B8%8A%20MQ%20%E6%B6%88%E6%81%AF%E4%B8%8D%E4%B8%A2%E5%A4%B1.html","title":"如何保证线上 MQ 消息不丢失","lang":"zh-CN","frontmatter":{"title":"如何保证线上 MQ 消息不丢失","index":false,"date":"2023-02-24T00:00:00.000Z","tag":["MQ"],"description":"消息发送方式 同步发送 生产者向 MQ 发送消息，会阻塞线程，必须拿到 MQ 返回的结果后，整个过程才算结束 异步发送 先构建一个发送的任务，然后将任务丢到线程池中，最终结果是通过回调函数来得知 OneWay 发送（单向） 只负责发送请求，不需要关注结果 适用于 log 之类的消息，丢几条也没有关系 如果要保证消息不丢失，那就尽量不要选择这种方式 什么...","head":[["meta",{"property":"og:url","content":"https://logycoconut.github.io/resource/staged/SeniorDevelopment/RocketMQ/%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E7%BA%BF%E4%B8%8A%20MQ%20%E6%B6%88%E6%81%AF%E4%B8%8D%E4%B8%A2%E5%A4%B1.html"}],["meta",{"property":"og:site_name","content":"logycoconut's k-lab"}],["meta",{"property":"og:title","content":"如何保证线上 MQ 消息不丢失"}],["meta",{"property":"og:description","content":"消息发送方式 同步发送 生产者向 MQ 发送消息，会阻塞线程，必须拿到 MQ 返回的结果后，整个过程才算结束 异步发送 先构建一个发送的任务，然后将任务丢到线程池中，最终结果是通过回调函数来得知 OneWay 发送（单向） 只负责发送请求，不需要关注结果 适用于 log 之类的消息，丢几条也没有关系 如果要保证消息不丢失，那就尽量不要选择这种方式 什么..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/logycoconut/pic-repo/code/mq/20230224151635.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-11T14:19:39.000Z"}],["meta",{"property":"article:tag","content":"MQ"}],["meta",{"property":"article:published_time","content":"2023-02-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-11T14:19:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何保证线上 MQ 消息不丢失\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/logycoconut/pic-repo/code/mq/20230224151635.png\\"],\\"datePublished\\":\\"2023-02-24T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-11T14:19:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"logycoconut\\",\\"url\\":\\"https://logycoconut.github.io/\\"}]}"]]},"headers":[{"level":3,"title":"消息发送方式","slug":"消息发送方式","link":"#消息发送方式","children":[]},{"level":3,"title":"什么时候会导致消息丢失","slug":"什么时候会导致消息丢失","link":"#什么时候会导致消息丢失","children":[]}],"git":{"createdTime":1678587865000,"updatedTime":1739283579000,"contributors":[{"name":"logycoconut","username":"logycoconut","email":"logycoconut@foxmail.com","commits":7,"url":"https://github.com/logycoconut"}]},"readingTime":{"minutes":0.87,"words":261},"filePathRelative":"resource/staged/SeniorDevelopment/RocketMQ/如何保证线上 MQ 消息不丢失.md","localizedDate":"2023年2月24日","autoDesc":true}`);export{s as comp,g as data};
