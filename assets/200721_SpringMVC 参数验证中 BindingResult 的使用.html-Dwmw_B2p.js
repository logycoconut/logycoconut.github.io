import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,d as s,o as a}from"./app-DRDqcPuo.js";const l={};function t(p,n){return a(),i("div",null,n[0]||(n[0]=[s(`<blockquote><p>在不需要统一处理异常时使用</p></blockquote><h2 id="代码示例" tabindex="-1"><a class="header-anchor" href="#代码示例"><span>代码示例</span></a></h2><h3 id="创建实体类" tabindex="-1"><a class="header-anchor" href="#创建实体类"><span>创建实体类</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>@Data</span></span>
<span class="line"><span>public class User {</span></span>
<span class="line"><span>    @NotNull(message = &quot;用户名不能为空&quot;)</span></span>
<span class="line"><span>    private String name;</span></span>
<span class="line"><span>    @NotEmpty(message = &quot;密码不能是空值&quot;)</span></span>
<span class="line"><span>    private String password;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="编写web层代码" tabindex="-1"><a class="header-anchor" href="#编写web层代码"><span>编写WEB层代码</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>@Slf4j</span></span>
<span class="line"><span>@RestController</span></span>
<span class="line"><span>@RequestMapping(&quot;user&quot;)</span></span>
<span class="line"><span>public class UserController {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @GetMapping(&quot;login1&quot;)</span></span>
<span class="line"><span>    public String login1(@Valid User user, BindingResult result) {</span></span>
<span class="line"><span>        if (result.hasErrors()) {</span></span>
<span class="line"><span>            result.getAllErrors()</span></span>
<span class="line"><span>                    .forEach(error -&gt; log.info(error.getDefaultMessage()));</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>        return &quot;登录成功&quot;;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @GetMapping(&quot;login2&quot;)</span></span>
<span class="line"><span>    public String login2(@Valid User user) {</span></span>
<span class="line"><span>        return &quot;登录成功&quot;;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="结果对比" tabindex="-1"><a class="header-anchor" href="#结果对比"><span>结果对比</span></a></h2><h3 id="_1-参数中有bindingresult" tabindex="-1"><a class="header-anchor" href="#_1-参数中有bindingresult"><span>① 参数中有BindingResult</span></a></h3><h4 id="返回结果" tabindex="-1"><a class="header-anchor" href="#返回结果"><span>返回结果：</span></a></h4><figure><img src="https://i.loli.net/2020/07/22/yJE6iKFXaMrlwkp.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="控制台信息" tabindex="-1"><a class="header-anchor" href="#控制台信息"><span>控制台信息：</span></a></h4><figure><img src="https://i.loli.net/2020/07/22/tGa2AP9plj8zhmM.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>异常并没有被抛出，在 web 层中获取了参数验证错误信息并在控制台打印了出来</p><hr><h3 id="_2-参数中没有bindingresult" tabindex="-1"><a class="header-anchor" href="#_2-参数中没有bindingresult"><span>② 参数中没有BindingResult</span></a></h3><h4 id="返回结果-1" tabindex="-1"><a class="header-anchor" href="#返回结果-1"><span>返回结果：</span></a></h4><figure><img src="https://i.loli.net/2020/07/22/jtQ5w7zX1vLVRlZ.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="控制台信息-1" tabindex="-1"><a class="header-anchor" href="#控制台信息-1"><span>控制台信息：</span></a></h4><figure><img src="https://i.loli.net/2020/07/22/NJ1xmvYwZXDIioM.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>抛出参数校验异常，框架为我们返回了一段信息，平时我们可以通过捕获全局异常的方式将校验异常包装到我们自定义的异常中，取出错误信息并与错误代码一起返回</p>`,20)]))}const o=e(l,[["render",t],["__file","200721_SpringMVC 参数验证中 BindingResult 的使用.html.vue"]]),c=JSON.parse(`{"path":"/archive/blog/2020/200721_SpringMVC%20%E5%8F%82%E6%95%B0%E9%AA%8C%E8%AF%81%E4%B8%AD%20BindingResult%20%E7%9A%84%E4%BD%BF%E7%94%A8.html","title":"SpringMVC 参数验证中 BindingResult 的使用","lang":"zh-CN","frontmatter":{"title":"SpringMVC 参数验证中 BindingResult 的使用","date":"2020-07-21T13:53:43.000Z","draft":false,"category":["关于技术"],"tag":["SpringMVC"],"description":"在不需要统一处理异常时使用 代码示例 创建实体类 编写WEB层代码 结果对比 ① 参数中有BindingResult 返回结果： 控制台信息： 异常并没有被抛出，在 web 层中获取了参数验证错误信息并在控制台打印了出来 ② 参数中没有BindingResult 返回结果： 控制台信息： 抛出参数校验异常，框架为我们返回了一段信息，平时我们可以通过捕获...","head":[["meta",{"property":"og:url","content":"https://logycoconut.github.io/archive/blog/2020/200721_SpringMVC%20%E5%8F%82%E6%95%B0%E9%AA%8C%E8%AF%81%E4%B8%AD%20BindingResult%20%E7%9A%84%E4%BD%BF%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"logycoconut's k-lab"}],["meta",{"property":"og:title","content":"SpringMVC 参数验证中 BindingResult 的使用"}],["meta",{"property":"og:description","content":"在不需要统一处理异常时使用 代码示例 创建实体类 编写WEB层代码 结果对比 ① 参数中有BindingResult 返回结果： 控制台信息： 异常并没有被抛出，在 web 层中获取了参数验证错误信息并在控制台打印了出来 ② 参数中没有BindingResult 返回结果： 控制台信息： 抛出参数校验异常，框架为我们返回了一段信息，平时我们可以通过捕获..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://i.loli.net/2020/07/22/yJE6iKFXaMrlwkp.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-11T14:19:39.000Z"}],["meta",{"property":"article:tag","content":"SpringMVC"}],["meta",{"property":"article:published_time","content":"2020-07-21T13:53:43.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-11T14:19:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringMVC 参数验证中 BindingResult 的使用\\",\\"image\\":[\\"https://i.loli.net/2020/07/22/yJE6iKFXaMrlwkp.png\\",\\"https://i.loli.net/2020/07/22/tGa2AP9plj8zhmM.png\\",\\"https://i.loli.net/2020/07/22/jtQ5w7zX1vLVRlZ.png\\",\\"https://i.loli.net/2020/07/22/NJ1xmvYwZXDIioM.png\\"],\\"datePublished\\":\\"2020-07-21T13:53:43.000Z\\",\\"dateModified\\":\\"2025-02-11T14:19:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"logycoconut\\",\\"url\\":\\"https://logycoconut.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"代码示例","slug":"代码示例","link":"#代码示例","children":[{"level":3,"title":"创建实体类","slug":"创建实体类","link":"#创建实体类","children":[]},{"level":3,"title":"编写WEB层代码","slug":"编写web层代码","link":"#编写web层代码","children":[]}]},{"level":2,"title":"结果对比","slug":"结果对比","link":"#结果对比","children":[{"level":3,"title":"① 参数中有BindingResult","slug":"_1-参数中有bindingresult","link":"#_1-参数中有bindingresult","children":[{"level":4,"title":"返回结果：","slug":"返回结果","link":"#返回结果","children":[]},{"level":4,"title":"控制台信息：","slug":"控制台信息","link":"#控制台信息","children":[]}]},{"level":3,"title":"② 参数中没有BindingResult","slug":"_2-参数中没有bindingresult","link":"#_2-参数中没有bindingresult","children":[{"level":4,"title":"返回结果：","slug":"返回结果-1","link":"#返回结果-1","children":[]},{"level":4,"title":"控制台信息：","slug":"控制台信息-1","link":"#控制台信息-1","children":[]}]}]}],"git":{"createdTime":1667915485000,"updatedTime":1739283579000,"contributors":[{"name":"logycoconut","username":"logycoconut","email":"1425795337@qq.com","commits":1,"url":"https://github.com/logycoconut"},{"name":"logycoconut","username":"logycoconut","email":"logycoconut@foxmail.com","commits":4,"url":"https://github.com/logycoconut"}]},"readingTime":{"minutes":0.9,"words":270},"filePathRelative":"archive/blog/2020/200721_SpringMVC 参数验证中 BindingResult 的使用.md","localizedDate":"2020年7月21日","autoDesc":true}`);export{o as comp,c as data};
